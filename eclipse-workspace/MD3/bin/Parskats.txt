Uzdevuma nosacījumi:

Logā ir jāizvieto JTextField elements, četras pogas JButton ar
uzrakstiem Add, Run, Delete un Clear, ka arī divus JList sarakstus.
Pēc pogas Add nospiešanas, pievienot kreisajam JList elementam
tekstu no JTextField.
Pēc pogas Run nospiešanas ar katru teksta rindu, kas atrodas kreisā
sarakstā izpildīt darbības, norādītās atbilstošā variantā un
rezultējosas teksta rindas izvietot labajā saraksta JList.
Pēc pogas Delete nospiešanas izdzēst visus iezīmētos elementus no
kreisā saraksta.
Pēc pogas Clear nospiešanas izdzēst labā saraksta saturu.


Individuālais uzdevums:  59.

Pārtulkot tekstu MAU valodā (aiz katra otrā burta pievienojot simbolu virkni "mau"). Pieņemt, ka
visi burti ir mazie.


Programmas Pirmkods:

public myframe() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 600, 300);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		textField = new JTextField();
		textField.setBounds(28, 11, 524, 20);
		contentPane.add(textField);
		textField.setColumns(60);
		
		JButton Addbtn = new JButton("Add");
		Addbtn.setBounds(107, 42, 89, 23);
		contentPane.add(Addbtn);
		
		JButton Runbtn = new JButton("Run");
		Runbtn.setBounds(392, 42, 89, 23);
		contentPane.add(Runbtn);
		
		ArrayList<String> items = new ArrayList<String>();
		
		JButton Deletebtn = new JButton("Delete");
		Deletebtn.setBounds(107, 227, 89, 23);
		contentPane.add(Deletebtn);
		
		JButton Clearbtn = new JButton("Clear");
		Clearbtn.setBounds(392, 227, 89, 23);
		contentPane.add(Clearbtn);
		
		
		DefaultListModel model = new DefaultListModel();
		JList list = new JList(model);
		list.setBounds(28, 80, 251, 136);
		contentPane.add(list);
		
		DefaultListModel modelin = new DefaultListModel();
		JList list_1 = new JList(modelin);
		list_1.setBounds(310, 80, 242, 136);
		contentPane.add(list_1);
		
		
		Addbtn.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				model.addElement(textField.getText());
				items.add(textField.getText());
			}
		});
		
		Deletebtn.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				for(int i = 0; i < items.size(); i++) {
					model.clear();
				}	
			}
		});
		Runbtn.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				for(int i = 0; i < items.size(); i++) {
					String temp = items.get(i);
					String temp1 ="";
					int j = 0;
					for(int k = 0; k<temp.length(); k++) {
						
						
						
						if(j%2==0 && j != 0) {
						temp1 = temp1 + "mau";
						} 
						
						if(temp.charAt(k) == ' ') {
							j=-1;
						}
						j++;
						temp1 = temp1 + temp.charAt(k);
						
					}
					modelin.addElement(temp1);
				}
			}
		});
		Clearbtn.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				modelin.clear();
			}
		});
		
		
	}